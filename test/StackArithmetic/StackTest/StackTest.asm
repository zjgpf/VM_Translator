//push constant 17
//*sp=i
@17
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 17
//*sp=i
@17
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Eq
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to eq if D=0
@StackTest_EQ0
D;JEQ
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP0
0;JMP
(StackTest_EQ0)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP0)
//sp++
@SP
M=M+1
//push constant 17
//*sp=i
@17
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 16
//*sp=i
@16
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Eq
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to eq if D=0
@StackTest_EQ1
D;JEQ
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP1
0;JMP
(StackTest_EQ1)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP1)
//sp++
@SP
M=M+1
//push constant 16
//*sp=i
@16
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 17
//*sp=i
@17
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Eq
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to eq if D=0
@StackTest_EQ2
D;JEQ
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP2
0;JMP
(StackTest_EQ2)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP2)
//sp++
@SP
M=M+1
//push constant 892
//*sp=i
@892
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 891
//*sp=i
@891
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Lt
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to lt if D=0
@StackTest_Lt3
D;JLT
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP3
0;JMP
(StackTest_Lt3)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP3)
//sp++
@SP
M=M+1
//push constant 891
//*sp=i
@891
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 892
//*sp=i
@892
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Lt
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to lt if D=0
@StackTest_Lt4
D;JLT
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP4
0;JMP
(StackTest_Lt4)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP4)
//sp++
@SP
M=M+1
//push constant 891
//*sp=i
@891
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 891
//*sp=i
@891
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Lt
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to lt if D=0
@StackTest_Lt5
D;JLT
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP5
0;JMP
(StackTest_Lt5)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP5)
//sp++
@SP
M=M+1
//push constant 32767
//*sp=i
@32767
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 32766
//*sp=i
@32766
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Gt
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to gt if D>0
@StackTest_GT6
D;JGT
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP6
0;JMP
(StackTest_GT6)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP6)
//sp++
@SP
M=M+1
//push constant 32766
//*sp=i
@32766
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 32767
//*sp=i
@32767
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Gt
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to gt if D>0
@StackTest_GT7
D;JGT
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP7
0;JMP
(StackTest_GT7)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP7)
//sp++
@SP
M=M+1
//push constant 32766
//*sp=i
@32766
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 32766
//*sp=i
@32766
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Gt
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//D=*sp-D
@SP
A=M
D=M-D
//go to gt if D>0
@StackTest_GT8
D;JGT
//*sp=0
@SP
A=M
M=0
//go to stop
@StackTest_STOP8
0;JMP
(StackTest_GT8)
//*sp=-1
@SP
A=M
M=-1
(StackTest_STOP8)
//sp++
@SP
M=M+1
//push constant 57
//*sp=i
@57
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 31
//*sp=i
@31
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//push constant 53
//*sp=i
@53
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//add
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//*sp=D+*sp 
@SP
A=M
M=M+D
//sp++
@SP
M=M+1
//push constant 112
//*sp=i
@112
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//sub
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//*sp=*sp-D
@SP
A=M
M=M-D
//sp++
@SP
M=M+1
//Neg
//sp--
@SP
M=M-1
//*sp = -*sp
@SP
A=M
M=-M
//sp++
@SP
M=M+1
//And
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//*sp=*sp&D
@SP
A=M
M=M&D
//sp++
@SP
M=M+1
//push constant 82
//*sp=i
@82
D=A
@SP
A=M
M=D
//sp++
@SP
M=M+1
//Or
//sp--
@SP
M=M-1
//D=*sp
@SP
A=M
D=M
//sp--
@SP
M=M-1
//*sp=*sp&D
@SP
A=M
M=M|D
//sp++
@SP
M=M+1
//Not
//sp--
@SP
M=M-1
//*sp = -*sp
@SP
A=M
M=!M
//sp++
@SP
M=M+1
